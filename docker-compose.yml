version: "3.7"

services:
  api:
    container_name: api
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    volumes:
      - ./api/src:/node/src
      - ./api/tsconfig.json:/api/tsconfig.json
      - /mnt/CE64EB6A64EB53AD/music-lib/tracks:/tracks

    expose:
      - "8080"
    ports:
      - "8080:8080"
      - "9229:9229"
    env_file:
      - ./api/.env
      - ./postgres/.env
      - ./.common.env

  postgres:
    container_name: postgres
    build:
      context: ./postgres
      dockerfile: Dockerfile
    restart: always
    env_file:
      - ./postgres/.env
    ports:
      - 5433:5432
    volumes:
      - ./postgres/volume/:/var/lib/postgresql/data
      - ./postgres/docker-entrypoint-initdb.d/init-dev.sql:/docker-entrypoint-initdb.d/init.sql

  client:
    container_name: client
    build:
      context: ./client
      dockerfile: Dockerfile

    restart: "always"
    env_file:
      - ./.common.env
      - ./client/.env
    expose:
      - 3000
    ports:
      - "3000:3000"
    volumes:
      - ./client/:/client/

networks:
  frontnet:
    driver: bridge
